{"version":3,"sources":["App.js","status.js","serviceWorker.js","index.js"],"names":["Index","items","dispatch","onClick","type","filter","item","status","map","ItemLink","key","id","Item","page","ItemEditor","ButtonLink","style","textDecoration","params","itemId","title","window","confirm","value","onChange","e","target","actions","ADD_ITEM","state","Math","random","toString","substring","SET_ITEM_TITLE","REMOVE_ITEM","MARK_AS","GOTO","reducer","action","hasOwnProperty","Error","children","fontFamily","border","fontSize","background","margin","padding","color","App","initialValue","rawValue","localStorage","getItem","storedState","JSON","parse","useState","setState","useEffect","setItem","stringify","useLocalStorage","setStoredState","useReducer","className","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7a07b20f.chunk.js","sourcesContent":["import React, { useState, useReducer, useEffect } from 'react'\nimport './App.css'\nimport { TODO, DONE } from './status'\n\nfunction App() {\n  const [storedState, setStoredState] = useLocalStorage({})\n\n  const [state, dispatch] = useReducer(reducer, storedState)\n\n  useEffect(() => {\n    setStoredState(state)\n  }, [setStoredState, state])\n\n  const {\n    items = [],\n    page = {\n      id: 'INDEX',\n      params: {},\n    },\n  } = state\n\n  return (\n    <div className=\"App\">\n      {page.id === 'INDEX' && <Index items={items} dispatch={dispatch} />}\n      {page.id === 'ITEM' && <Item item={items.filter((item) => item.id === page.params.itemId)[0]} dispatch={dispatch} />}\n    </div>\n  )\n}\n\nfunction Index({ items, dispatch }) {\n  return (\n    <div>\n      <button onClick={() => dispatch({ type: 'ADD_ITEM' })}>new</button>\n      {items.filter((item) => item.status !== DONE).map((item) => (<ItemLink key={item.id} item={item} dispatch={dispatch} />))}\n      {items.filter((item) => item.status === DONE).map((item) => (<ItemLink key={item.id} item={item} dispatch={dispatch} />))}\n    </div>\n  )\n}\n\nfunction Item({ item, dispatch }) {\n  return (\n    <div>\n      <button onClick={() => dispatch({ type: 'GOTO', page: 'INDEX' })}>back</button>\n      {item && <ItemEditor item={item} dispatch={dispatch} />}\n    </div>\n  )\n}\n\nfunction ItemLink({ item, dispatch }) {\n  return (\n    <div>\n      <ButtonLink style={{ textDecoration: item.status === DONE ? 'strikethrough': 'none' }} onClick={() => dispatch({ type: 'GOTO', page: 'ITEM', params: { itemId: item.id } })}>{item.title}</ButtonLink>\n    </div>\n  )\n}\n\nfunction ItemEditor({ item, dispatch }) {\n  return (\n    <div>\n      <div>\n        {item.status !== DONE && <button onClick={() => dispatch({ type: 'MARK_AS', itemId: item.id, status: DONE })}>mark as done</button>}\n        {item.status === DONE && <button onClick={() => dispatch({ type: 'MARK_AS', itemId: item.id, status: TODO })}>mark as todo</button>}\n        <button onClick={() => window.confirm('Are you sure?') && dispatch({ type: 'REMOVE_ITEM', itemId: item.id })}>delete...</button>\n      </div>\n      <input type=\"text\" value={item.title} onChange={(e) => dispatch({ type: 'SET_ITEM_TITLE', itemId: item.id, value: e.target.value })} />\n    </div>\n  )\n}\n\nfunction useLocalStorage(initialValue) {\n  const rawValue = localStorage.getItem('state')\n  const storedState = rawValue !== null ? JSON.parse(rawValue) : initialValue\n  const [state, setState] = useState(storedState)\n\n  useEffect(() => {\n    localStorage.setItem('state', JSON.stringify(state));\n  }, [state])\n\n  return [state, setState];\n}\n\nconst actions = {\n  ADD_ITEM: (state) => ({\n    ...state,\n    items: [...(state.items || []), { id: generateRandomId(), title: 'untitled' }],\n  }),\n  SET_ITEM_TITLE: (state, { itemId, value }) => ({\n    ...state,\n    items: state.items.map((item) => item.id === itemId ? { ...item, title: value } : item),\n  }),\n  REMOVE_ITEM: (state, { itemId }) => ({\n    ...state,\n    items: state.items.filter((item) => item.id !== itemId),\n  }),\n  MARK_AS: (state, { itemId, status }) => ({\n    ...state,\n    items: state.items.map((item) => item.id === itemId ? { ...item, status } : item),\n  }),\n  GOTO: (state, { page, params }) => ({\n    ...state,\n    page: { id: page, params },\n  }),\n}\n\nfunction reducer(state, action) {\n  if (actions.hasOwnProperty(action.type)) {\n    return actions[action.type](state, action)\n  }\n\n  throw new Error(`Unknown action type \\`${action.type}\\``)\n}\n\nfunction generateRandomId() {\n  return Math.random().toString(36).substring(7)\n}\n\nfunction ButtonLink({ onClick, children }) {\n  return (\n    <button style={{ fontFamily: 'serif', border: '0', fontSize: '1em', background: 'transparent', margin: '0', padding: '0', textDecoration: 'underline', color: 'blue' }} onClick={onClick}>{children}</button>\n  )\n}\n\nexport default App\n","export const DONE = 'DONE'\nexport const TODO = 'TODO'","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}